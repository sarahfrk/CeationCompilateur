Terminals unused in grammar

   pvg
   guillemets
   apostrophes


´Etat 163conflits: 2 réduction/réduction


Grammaire

    0 $accept: S $end

    1 S: mc_idf mc_div mc_prgm idf point mc_data mc_div mc_work mc_section LIST_DEC mc_proc mc_div LIST_INST mc_stop mc_run

    2 LIST_DEC: DEC LIST_DEC
    3         | /* vide */

    4 DEC: LIST_IDF
    5    | DEC_TAB
    6    | DEC_CONST

    7 DEC_CONST: mc_const LIST_CONST point
    8          | mc_const idf TYPE point

    9 LIST_CONST: CONSTT separateur LIST_CONST
   10           | CONSTT
   11           | /* vide */

   12 CONSTT: idf egal TYPE_CONST

   13 TYPE_CONST: type_integer
   14           | type_float
   15           | type_char
   16           | type_string

   17 DEC_TAB: LIST_TAB TYPE point

   18 LIST_TAB: TAB separateur LIST_TAB
   19         | TAB

   20 TAB: idf mc_line type_integer vrg mc_size type_integer

   21 LIST_IDF: idf separateur LIST_IDF
   22         | idf TYPE point

   23 TYPE: mc_integer
   24     | mc_float
   25     | mc_char
   26     | mc_string

   27 LIST_INST: INST

   28 INST: INST_OPR_LOG_COMP INST
   29     | AFFECTATION point INST
   30     | ENTREE INST
   31     | SORTIE INST
   32     | IF INST
   33     | BOUCLE INST
   34     | /* vide */

   35 INST_OPR_LOG_COMP: p_ouvre EXPRESSION OPERATEUR_LOGIQUE_COMP EXPRESSION p_ferme
   36                  | p_ouvre mc_not EXPRESSION p_ferme

   37 OPERATEUR_LOGIQUE_COMP: mc_and
   38                       | mc_or
   39                       | mc_di
   40                       | mc_ge
   41                       | mc_l
   42                       | mc_le
   43                       | mc_eq
   44                       | mc_g

   45 EXPRESSION: p_ouvre E OPERATEUR E p_ferme
   46           | TYPE_CONST
   47           | AUTRE
   48           | idf

   49 E: p_ouvre EXPRESSION p_ferme
   50  | TYPE_CONST

   51 AUTRE: TYPE_CONST OPERATEUR AUTRE2

   52 AUTRE2: AUTRE
   53       | TYPE_CONST

   54 AFFECTATION: idf egal EXPRESSION_AFF
   55            | idf egal OPERANDE

   56 EXPRESSION_AFF: EXP_P

   57 EXP: OPERANDE OPERATEUR EXP
   58    | OPERANDE OPERATEUR EXP_P
   59    | OPERANDE

   60 EXP_P: p_ouvre EXP p_ferme OPERATEUR EXPRESSION_AFF
   61      | p_ouvre EXP p_ferme
   62      | p_ouvre EXP_P p_ferme
   63      | p_ouvre EXP_P p_ferme OPERATEUR EXPRESSION_AFF
   64      | p_ouvre EXP p_ferme OPERATEUR EXP
   65      | OPERANDE OPERATEUR EXP

   66 OPERANDE: type_integer
   67         | type_float
   68         | type_char
   69         | type_string
   70         | idf

   71 OPERATEUR: plus
   72          | division
   73          | moins
   74          | multiple

   75 ENTREE: mc_accept p_ouvre sign deuxp arob idf p_ferme point

   76 SORTIE: mc_display p_ouvre PHRASE deuxp idf p_ferme point

   77 PHRASE: phrase_dz
   78       | phrase_et
   79       | phrase_dol
   80       | phrase_pourc

   81 IF: mc_if INST_OPR_LOG_COMP deuxp INST mc_end
   82   | mc_if INST_OPR_LOG_COMP deuxp INST mc_else deuxp INST mc_end

   83 BOUCLE: mc_move VAL mc_to VAL INST mc_end

   84 VAL: idf
   85    | TYPE_CONST


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
error (256)
mc_idf (258) 1
mc_div (259) 1
mc_prgm (260) 1
mc_data (261) 1
mc_work (262) 1
mc_section (263) 1
mc_proc (264) 1
mc_stop (265) 1
mc_run (266) 1
mc_integer (267) 23
mc_float (268) 24
mc_char (269) 25
mc_string (270) 26
mc_const (271) 7 8
mc_accept (272) 75
mc_display (273) 76
mc_if (274) 81 82
mc_else (275) 82
mc_end (276) 81 82 83
mc_line (277) 20
mc_size (278) 20
mc_move (279) 83
mc_to (280) 83
mc_not (281) 36
mc_and (282) 37
mc_or (283) 38
mc_ge (284) 40
mc_g (285) 44
mc_l (286) 41
mc_le (287) 42
mc_eq (288) 43
mc_di (289) 39
type_integer (290) 13 20 66
type_float (291) 14 67
idf (292) 1 8 12 20 21 22 48 54 55 70 75 76 84
egal (293) 12 54 55
pvg (294)
vrg (295) 20
plus (296) 71
moins (297) 73
multiple (298) 74
division (299) 72
p_ouvre (300) 35 36 45 49 60 61 62 63 64 75 76
p_ferme (301) 35 36 45 49 60 61 62 63 64 75 76
point (302) 1 7 8 17 22 29 75 76
guillemets (303)
apostrophes (304)
deuxp (305) 75 76 81 82
type_char (306) 15 68
type_string (307) 16 69
separateur (308) 9 18 21
arob (309) 75
phrase_dol (310) 79
phrase_dz (311) 77
phrase_pourc (312) 80
phrase_et (313) 78
sign (314) 75


Non-terminaux, suivis des règles où ils apparaissent

$accept (60)
    à gauche: 0
S (61)
    à gauche: 1, à droite: 0
LIST_DEC (62)
    à gauche: 2 3, à droite: 1 2
DEC (63)
    à gauche: 4 5 6, à droite: 2
DEC_CONST (64)
    à gauche: 7 8, à droite: 6
LIST_CONST (65)
    à gauche: 9 10 11, à droite: 7 9
CONSTT (66)
    à gauche: 12, à droite: 9 10
TYPE_CONST (67)
    à gauche: 13 14 15 16, à droite: 12 46 50 51 53 85
DEC_TAB (68)
    à gauche: 17, à droite: 5
LIST_TAB (69)
    à gauche: 18 19, à droite: 17 18
TAB (70)
    à gauche: 20, à droite: 18 19
LIST_IDF (71)
    à gauche: 21 22, à droite: 4 21
TYPE (72)
    à gauche: 23 24 25 26, à droite: 8 17 22
LIST_INST (73)
    à gauche: 27, à droite: 1
INST (74)
    à gauche: 28 29 30 31 32 33 34, à droite: 27 28 29 30 31 32 33
    81 82 83
INST_OPR_LOG_COMP (75)
    à gauche: 35 36, à droite: 28 81 82
OPERATEUR_LOGIQUE_COMP (76)
    à gauche: 37 38 39 40 41 42 43 44, à droite: 35
EXPRESSION (77)
    à gauche: 45 46 47 48, à droite: 35 36 49
E (78)
    à gauche: 49 50, à droite: 45
AUTRE (79)
    à gauche: 51, à droite: 47 52
AUTRE2 (80)
    à gauche: 52 53, à droite: 51
AFFECTATION (81)
    à gauche: 54 55, à droite: 29
EXPRESSION_AFF (82)
    à gauche: 56, à droite: 54 60 63
EXP (83)
    à gauche: 57 58 59, à droite: 57 60 61 64 65
EXP_P (84)
    à gauche: 60 61 62 63 64 65, à droite: 56 58 62 63
OPERANDE (85)
    à gauche: 66 67 68 69 70, à droite: 55 57 58 59 65
OPERATEUR (86)
    à gauche: 71 72 73 74, à droite: 45 51 57 58 60 63 64 65
ENTREE (87)
    à gauche: 75, à droite: 30
SORTIE (88)
    à gauche: 76, à droite: 31
PHRASE (89)
    à gauche: 77 78 79 80, à droite: 76
IF (90)
    à gauche: 81 82, à droite: 32
BOUCLE (91)
    à gauche: 83, à droite: 33
VAL (92)
    à gauche: 84 85, à droite: 83


état 0

    0 $accept: . S $end

    mc_idf  décalage et aller à l'état 1

    S  aller à l'état 2


état 1

    1 S: mc_idf . mc_div mc_prgm idf point mc_data mc_div mc_work mc_section LIST_DEC mc_proc mc_div LIST_INST mc_stop mc_run

    mc_div  décalage et aller à l'état 3


état 2

    0 $accept: S . $end

    $end  décalage et aller à l'état 4


état 3

    1 S: mc_idf mc_div . mc_prgm idf point mc_data mc_div mc_work mc_section LIST_DEC mc_proc mc_div LIST_INST mc_stop mc_run

    mc_prgm  décalage et aller à l'état 5


état 4

    0 $accept: S $end .

    $défaut  accepter


état 5

    1 S: mc_idf mc_div mc_prgm . idf point mc_data mc_div mc_work mc_section LIST_DEC mc_proc mc_div LIST_INST mc_stop mc_run

    idf  décalage et aller à l'état 6


état 6

    1 S: mc_idf mc_div mc_prgm idf . point mc_data mc_div mc_work mc_section LIST_DEC mc_proc mc_div LIST_INST mc_stop mc_run

    point  décalage et aller à l'état 7


état 7

    1 S: mc_idf mc_div mc_prgm idf point . mc_data mc_div mc_work mc_section LIST_DEC mc_proc mc_div LIST_INST mc_stop mc_run

    mc_data  décalage et aller à l'état 8


état 8

    1 S: mc_idf mc_div mc_prgm idf point mc_data . mc_div mc_work mc_section LIST_DEC mc_proc mc_div LIST_INST mc_stop mc_run

    mc_div  décalage et aller à l'état 9


état 9

    1 S: mc_idf mc_div mc_prgm idf point mc_data mc_div . mc_work mc_section LIST_DEC mc_proc mc_div LIST_INST mc_stop mc_run

    mc_work  décalage et aller à l'état 10


état 10

    1 S: mc_idf mc_div mc_prgm idf point mc_data mc_div mc_work . mc_section LIST_DEC mc_proc mc_div LIST_INST mc_stop mc_run

    mc_section  décalage et aller à l'état 11


état 11

    1 S: mc_idf mc_div mc_prgm idf point mc_data mc_div mc_work mc_section . LIST_DEC mc_proc mc_div LIST_INST mc_stop mc_run

    mc_const  décalage et aller à l'état 12
    idf       décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 3 (LIST_DEC)

    LIST_DEC   aller à l'état 14
    DEC        aller à l'état 15
    DEC_CONST  aller à l'état 16
    DEC_TAB    aller à l'état 17
    LIST_TAB   aller à l'état 18
    TAB        aller à l'état 19
    LIST_IDF   aller à l'état 20


état 12

    7 DEC_CONST: mc_const . LIST_CONST point
    8          | mc_const . idf TYPE point

    idf  décalage et aller à l'état 21

    $défaut  réduction par utilisation de la règle 11 (LIST_CONST)

    LIST_CONST  aller à l'état 22
    CONSTT      aller à l'état 23


état 13

   20 TAB: idf . mc_line type_integer vrg mc_size type_integer
   21 LIST_IDF: idf . separateur LIST_IDF
   22         | idf . TYPE point

    mc_integer  décalage et aller à l'état 24
    mc_float    décalage et aller à l'état 25
    mc_char     décalage et aller à l'état 26
    mc_string   décalage et aller à l'état 27
    mc_line     décalage et aller à l'état 28
    separateur  décalage et aller à l'état 29

    TYPE  aller à l'état 30


état 14

    1 S: mc_idf mc_div mc_prgm idf point mc_data mc_div mc_work mc_section LIST_DEC . mc_proc mc_div LIST_INST mc_stop mc_run

    mc_proc  décalage et aller à l'état 31


état 15

    2 LIST_DEC: DEC . LIST_DEC

    mc_const  décalage et aller à l'état 12
    idf       décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 3 (LIST_DEC)

    LIST_DEC   aller à l'état 32
    DEC        aller à l'état 15
    DEC_CONST  aller à l'état 16
    DEC_TAB    aller à l'état 17
    LIST_TAB   aller à l'état 18
    TAB        aller à l'état 19
    LIST_IDF   aller à l'état 20


état 16

    6 DEC: DEC_CONST .

    $défaut  réduction par utilisation de la règle 6 (DEC)


état 17

    5 DEC: DEC_TAB .

    $défaut  réduction par utilisation de la règle 5 (DEC)


état 18

   17 DEC_TAB: LIST_TAB . TYPE point

    mc_integer  décalage et aller à l'état 24
    mc_float    décalage et aller à l'état 25
    mc_char     décalage et aller à l'état 26
    mc_string   décalage et aller à l'état 27

    TYPE  aller à l'état 33


état 19

   18 LIST_TAB: TAB . separateur LIST_TAB
   19         | TAB .

    separateur  décalage et aller à l'état 34

    $défaut  réduction par utilisation de la règle 19 (LIST_TAB)


état 20

    4 DEC: LIST_IDF .

    $défaut  réduction par utilisation de la règle 4 (DEC)


état 21

    8 DEC_CONST: mc_const idf . TYPE point
   12 CONSTT: idf . egal TYPE_CONST

    mc_integer  décalage et aller à l'état 24
    mc_float    décalage et aller à l'état 25
    mc_char     décalage et aller à l'état 26
    mc_string   décalage et aller à l'état 27
    egal        décalage et aller à l'état 35

    TYPE  aller à l'état 36


état 22

    7 DEC_CONST: mc_const LIST_CONST . point

    point  décalage et aller à l'état 37


état 23

    9 LIST_CONST: CONSTT . separateur LIST_CONST
   10           | CONSTT .

    separateur  décalage et aller à l'état 38

    $défaut  réduction par utilisation de la règle 10 (LIST_CONST)


état 24

   23 TYPE: mc_integer .

    $défaut  réduction par utilisation de la règle 23 (TYPE)


état 25

   24 TYPE: mc_float .

    $défaut  réduction par utilisation de la règle 24 (TYPE)


état 26

   25 TYPE: mc_char .

    $défaut  réduction par utilisation de la règle 25 (TYPE)


état 27

   26 TYPE: mc_string .

    $défaut  réduction par utilisation de la règle 26 (TYPE)


état 28

   20 TAB: idf mc_line . type_integer vrg mc_size type_integer

    type_integer  décalage et aller à l'état 39


état 29

   21 LIST_IDF: idf separateur . LIST_IDF

    idf  décalage et aller à l'état 40

    LIST_IDF  aller à l'état 41


état 30

   22 LIST_IDF: idf TYPE . point

    point  décalage et aller à l'état 42


état 31

    1 S: mc_idf mc_div mc_prgm idf point mc_data mc_div mc_work mc_section LIST_DEC mc_proc . mc_div LIST_INST mc_stop mc_run

    mc_div  décalage et aller à l'état 43


état 32

    2 LIST_DEC: DEC LIST_DEC .

    $défaut  réduction par utilisation de la règle 2 (LIST_DEC)


état 33

   17 DEC_TAB: LIST_TAB TYPE . point

    point  décalage et aller à l'état 44


état 34

   18 LIST_TAB: TAB separateur . LIST_TAB

    idf  décalage et aller à l'état 45

    LIST_TAB  aller à l'état 46
    TAB       aller à l'état 19


état 35

   12 CONSTT: idf egal . TYPE_CONST

    type_integer  décalage et aller à l'état 47
    type_float    décalage et aller à l'état 48
    type_char     décalage et aller à l'état 49
    type_string   décalage et aller à l'état 50

    TYPE_CONST  aller à l'état 51


état 36

    8 DEC_CONST: mc_const idf TYPE . point

    point  décalage et aller à l'état 52


état 37

    7 DEC_CONST: mc_const LIST_CONST point .

    $défaut  réduction par utilisation de la règle 7 (DEC_CONST)


état 38

    9 LIST_CONST: CONSTT separateur . LIST_CONST

    idf  décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 11 (LIST_CONST)

    LIST_CONST  aller à l'état 54
    CONSTT      aller à l'état 23


état 39

   20 TAB: idf mc_line type_integer . vrg mc_size type_integer

    vrg  décalage et aller à l'état 55


état 40

   21 LIST_IDF: idf . separateur LIST_IDF
   22         | idf . TYPE point

    mc_integer  décalage et aller à l'état 24
    mc_float    décalage et aller à l'état 25
    mc_char     décalage et aller à l'état 26
    mc_string   décalage et aller à l'état 27
    separateur  décalage et aller à l'état 29

    TYPE  aller à l'état 30


état 41

   21 LIST_IDF: idf separateur LIST_IDF .

    $défaut  réduction par utilisation de la règle 21 (LIST_IDF)


état 42

   22 LIST_IDF: idf TYPE point .

    $défaut  réduction par utilisation de la règle 22 (LIST_IDF)


état 43

    1 S: mc_idf mc_div mc_prgm idf point mc_data mc_div mc_work mc_section LIST_DEC mc_proc mc_div . LIST_INST mc_stop mc_run

    mc_accept   décalage et aller à l'état 56
    mc_display  décalage et aller à l'état 57
    mc_if       décalage et aller à l'état 58
    mc_move     décalage et aller à l'état 59
    idf         décalage et aller à l'état 60
    p_ouvre     décalage et aller à l'état 61

    $défaut  réduction par utilisation de la règle 34 (INST)

    LIST_INST          aller à l'état 62
    INST               aller à l'état 63
    INST_OPR_LOG_COMP  aller à l'état 64
    AFFECTATION        aller à l'état 65
    ENTREE             aller à l'état 66
    SORTIE             aller à l'état 67
    IF                 aller à l'état 68
    BOUCLE             aller à l'état 69


état 44

   17 DEC_TAB: LIST_TAB TYPE point .

    $défaut  réduction par utilisation de la règle 17 (DEC_TAB)


état 45

   20 TAB: idf . mc_line type_integer vrg mc_size type_integer

    mc_line  décalage et aller à l'état 28


état 46

   18 LIST_TAB: TAB separateur LIST_TAB .

    $défaut  réduction par utilisation de la règle 18 (LIST_TAB)


état 47

   13 TYPE_CONST: type_integer .

    $défaut  réduction par utilisation de la règle 13 (TYPE_CONST)


état 48

   14 TYPE_CONST: type_float .

    $défaut  réduction par utilisation de la règle 14 (TYPE_CONST)


état 49

   15 TYPE_CONST: type_char .

    $défaut  réduction par utilisation de la règle 15 (TYPE_CONST)


état 50

   16 TYPE_CONST: type_string .

    $défaut  réduction par utilisation de la règle 16 (TYPE_CONST)


état 51

   12 CONSTT: idf egal TYPE_CONST .

    $défaut  réduction par utilisation de la règle 12 (CONSTT)


état 52

    8 DEC_CONST: mc_const idf TYPE point .

    $défaut  réduction par utilisation de la règle 8 (DEC_CONST)


état 53

   12 CONSTT: idf . egal TYPE_CONST

    egal  décalage et aller à l'état 35


état 54

    9 LIST_CONST: CONSTT separateur LIST_CONST .

    $défaut  réduction par utilisation de la règle 9 (LIST_CONST)


état 55

   20 TAB: idf mc_line type_integer vrg . mc_size type_integer

    mc_size  décalage et aller à l'état 70


état 56

   75 ENTREE: mc_accept . p_ouvre sign deuxp arob idf p_ferme point

    p_ouvre  décalage et aller à l'état 71


état 57

   76 SORTIE: mc_display . p_ouvre PHRASE deuxp idf p_ferme point

    p_ouvre  décalage et aller à l'état 72


état 58

   81 IF: mc_if . INST_OPR_LOG_COMP deuxp INST mc_end
   82   | mc_if . INST_OPR_LOG_COMP deuxp INST mc_else deuxp INST mc_end

    p_ouvre  décalage et aller à l'état 61

    INST_OPR_LOG_COMP  aller à l'état 73


état 59

   83 BOUCLE: mc_move . VAL mc_to VAL INST mc_end

    type_integer  décalage et aller à l'état 47
    type_float    décalage et aller à l'état 48
    idf           décalage et aller à l'état 74
    type_char     décalage et aller à l'état 49
    type_string   décalage et aller à l'état 50

    TYPE_CONST  aller à l'état 75
    VAL         aller à l'état 76


état 60

   54 AFFECTATION: idf . egal EXPRESSION_AFF
   55            | idf . egal OPERANDE

    egal  décalage et aller à l'état 77


état 61

   35 INST_OPR_LOG_COMP: p_ouvre . EXPRESSION OPERATEUR_LOGIQUE_COMP EXPRESSION p_ferme
   36                  | p_ouvre . mc_not EXPRESSION p_ferme

    mc_not        décalage et aller à l'état 78
    type_integer  décalage et aller à l'état 47
    type_float    décalage et aller à l'état 48
    idf           décalage et aller à l'état 79
    p_ouvre       décalage et aller à l'état 80
    type_char     décalage et aller à l'état 49
    type_string   décalage et aller à l'état 50

    TYPE_CONST  aller à l'état 81
    EXPRESSION  aller à l'état 82
    AUTRE       aller à l'état 83


état 62

    1 S: mc_idf mc_div mc_prgm idf point mc_data mc_div mc_work mc_section LIST_DEC mc_proc mc_div LIST_INST . mc_stop mc_run

    mc_stop  décalage et aller à l'état 84


état 63

   27 LIST_INST: INST .

    $défaut  réduction par utilisation de la règle 27 (LIST_INST)


état 64

   28 INST: INST_OPR_LOG_COMP . INST

    mc_accept   décalage et aller à l'état 56
    mc_display  décalage et aller à l'état 57
    mc_if       décalage et aller à l'état 58
    mc_move     décalage et aller à l'état 59
    idf         décalage et aller à l'état 60
    p_ouvre     décalage et aller à l'état 61

    $défaut  réduction par utilisation de la règle 34 (INST)

    INST               aller à l'état 85
    INST_OPR_LOG_COMP  aller à l'état 64
    AFFECTATION        aller à l'état 65
    ENTREE             aller à l'état 66
    SORTIE             aller à l'état 67
    IF                 aller à l'état 68
    BOUCLE             aller à l'état 69


état 65

   29 INST: AFFECTATION . point INST

    point  décalage et aller à l'état 86


état 66

   30 INST: ENTREE . INST

    mc_accept   décalage et aller à l'état 56
    mc_display  décalage et aller à l'état 57
    mc_if       décalage et aller à l'état 58
    mc_move     décalage et aller à l'état 59
    idf         décalage et aller à l'état 60
    p_ouvre     décalage et aller à l'état 61

    $défaut  réduction par utilisation de la règle 34 (INST)

    INST               aller à l'état 87
    INST_OPR_LOG_COMP  aller à l'état 64
    AFFECTATION        aller à l'état 65
    ENTREE             aller à l'état 66
    SORTIE             aller à l'état 67
    IF                 aller à l'état 68
    BOUCLE             aller à l'état 69


état 67

   31 INST: SORTIE . INST

    mc_accept   décalage et aller à l'état 56
    mc_display  décalage et aller à l'état 57
    mc_if       décalage et aller à l'état 58
    mc_move     décalage et aller à l'état 59
    idf         décalage et aller à l'état 60
    p_ouvre     décalage et aller à l'état 61

    $défaut  réduction par utilisation de la règle 34 (INST)

    INST               aller à l'état 88
    INST_OPR_LOG_COMP  aller à l'état 64
    AFFECTATION        aller à l'état 65
    ENTREE             aller à l'état 66
    SORTIE             aller à l'état 67
    IF                 aller à l'état 68
    BOUCLE             aller à l'état 69


état 68

   32 INST: IF . INST

    mc_accept   décalage et aller à l'état 56
    mc_display  décalage et aller à l'état 57
    mc_if       décalage et aller à l'état 58
    mc_move     décalage et aller à l'état 59
    idf         décalage et aller à l'état 60
    p_ouvre     décalage et aller à l'état 61

    $défaut  réduction par utilisation de la règle 34 (INST)

    INST               aller à l'état 89
    INST_OPR_LOG_COMP  aller à l'état 64
    AFFECTATION        aller à l'état 65
    ENTREE             aller à l'état 66
    SORTIE             aller à l'état 67
    IF                 aller à l'état 68
    BOUCLE             aller à l'état 69


état 69

   33 INST: BOUCLE . INST

    mc_accept   décalage et aller à l'état 56
    mc_display  décalage et aller à l'état 57
    mc_if       décalage et aller à l'état 58
    mc_move     décalage et aller à l'état 59
    idf         décalage et aller à l'état 60
    p_ouvre     décalage et aller à l'état 61

    $défaut  réduction par utilisation de la règle 34 (INST)

    INST               aller à l'état 90
    INST_OPR_LOG_COMP  aller à l'état 64
    AFFECTATION        aller à l'état 65
    ENTREE             aller à l'état 66
    SORTIE             aller à l'état 67
    IF                 aller à l'état 68
    BOUCLE             aller à l'état 69


état 70

   20 TAB: idf mc_line type_integer vrg mc_size . type_integer

    type_integer  décalage et aller à l'état 91


état 71

   75 ENTREE: mc_accept p_ouvre . sign deuxp arob idf p_ferme point

    sign  décalage et aller à l'état 92


état 72

   76 SORTIE: mc_display p_ouvre . PHRASE deuxp idf p_ferme point

    phrase_dol    décalage et aller à l'état 93
    phrase_dz     décalage et aller à l'état 94
    phrase_pourc  décalage et aller à l'état 95
    phrase_et     décalage et aller à l'état 96

    PHRASE  aller à l'état 97


état 73

   81 IF: mc_if INST_OPR_LOG_COMP . deuxp INST mc_end
   82   | mc_if INST_OPR_LOG_COMP . deuxp INST mc_else deuxp INST mc_end

    deuxp  décalage et aller à l'état 98


état 74

   84 VAL: idf .

    $défaut  réduction par utilisation de la règle 84 (VAL)


état 75

   85 VAL: TYPE_CONST .

    $défaut  réduction par utilisation de la règle 85 (VAL)


état 76

   83 BOUCLE: mc_move VAL . mc_to VAL INST mc_end

    mc_to  décalage et aller à l'état 99


état 77

   54 AFFECTATION: idf egal . EXPRESSION_AFF
   55            | idf egal . OPERANDE

    type_integer  décalage et aller à l'état 100
    type_float    décalage et aller à l'état 101
    idf           décalage et aller à l'état 102
    p_ouvre       décalage et aller à l'état 103
    type_char     décalage et aller à l'état 104
    type_string   décalage et aller à l'état 105

    EXPRESSION_AFF  aller à l'état 106
    EXP_P           aller à l'état 107
    OPERANDE        aller à l'état 108


état 78

   36 INST_OPR_LOG_COMP: p_ouvre mc_not . EXPRESSION p_ferme

    type_integer  décalage et aller à l'état 47
    type_float    décalage et aller à l'état 48
    idf           décalage et aller à l'état 79
    p_ouvre       décalage et aller à l'état 80
    type_char     décalage et aller à l'état 49
    type_string   décalage et aller à l'état 50

    TYPE_CONST  aller à l'état 81
    EXPRESSION  aller à l'état 109
    AUTRE       aller à l'état 83


état 79

   48 EXPRESSION: idf .

    $défaut  réduction par utilisation de la règle 48 (EXPRESSION)


état 80

   45 EXPRESSION: p_ouvre . E OPERATEUR E p_ferme

    type_integer  décalage et aller à l'état 47
    type_float    décalage et aller à l'état 48
    p_ouvre       décalage et aller à l'état 110
    type_char     décalage et aller à l'état 49
    type_string   décalage et aller à l'état 50

    TYPE_CONST  aller à l'état 111
    E           aller à l'état 112


état 81

   46 EXPRESSION: TYPE_CONST .
   51 AUTRE: TYPE_CONST . OPERATEUR AUTRE2

    plus      décalage et aller à l'état 113
    moins     décalage et aller à l'état 114
    multiple  décalage et aller à l'état 115
    division  décalage et aller à l'état 116

    $défaut  réduction par utilisation de la règle 46 (EXPRESSION)

    OPERATEUR  aller à l'état 117


état 82

   35 INST_OPR_LOG_COMP: p_ouvre EXPRESSION . OPERATEUR_LOGIQUE_COMP EXPRESSION p_ferme

    mc_and  décalage et aller à l'état 118
    mc_or   décalage et aller à l'état 119
    mc_ge   décalage et aller à l'état 120
    mc_g    décalage et aller à l'état 121
    mc_l    décalage et aller à l'état 122
    mc_le   décalage et aller à l'état 123
    mc_eq   décalage et aller à l'état 124
    mc_di   décalage et aller à l'état 125

    OPERATEUR_LOGIQUE_COMP  aller à l'état 126


état 83

   47 EXPRESSION: AUTRE .

    $défaut  réduction par utilisation de la règle 47 (EXPRESSION)


état 84

    1 S: mc_idf mc_div mc_prgm idf point mc_data mc_div mc_work mc_section LIST_DEC mc_proc mc_div LIST_INST mc_stop . mc_run

    mc_run  décalage et aller à l'état 127


état 85

   28 INST: INST_OPR_LOG_COMP INST .

    $défaut  réduction par utilisation de la règle 28 (INST)


état 86

   29 INST: AFFECTATION point . INST

    mc_accept   décalage et aller à l'état 56
    mc_display  décalage et aller à l'état 57
    mc_if       décalage et aller à l'état 58
    mc_move     décalage et aller à l'état 59
    idf         décalage et aller à l'état 60
    p_ouvre     décalage et aller à l'état 61

    $défaut  réduction par utilisation de la règle 34 (INST)

    INST               aller à l'état 128
    INST_OPR_LOG_COMP  aller à l'état 64
    AFFECTATION        aller à l'état 65
    ENTREE             aller à l'état 66
    SORTIE             aller à l'état 67
    IF                 aller à l'état 68
    BOUCLE             aller à l'état 69


état 87

   30 INST: ENTREE INST .

    $défaut  réduction par utilisation de la règle 30 (INST)


état 88

   31 INST: SORTIE INST .

    $défaut  réduction par utilisation de la règle 31 (INST)


état 89

   32 INST: IF INST .

    $défaut  réduction par utilisation de la règle 32 (INST)


état 90

   33 INST: BOUCLE INST .

    $défaut  réduction par utilisation de la règle 33 (INST)


état 91

   20 TAB: idf mc_line type_integer vrg mc_size type_integer .

    $défaut  réduction par utilisation de la règle 20 (TAB)


état 92

   75 ENTREE: mc_accept p_ouvre sign . deuxp arob idf p_ferme point

    deuxp  décalage et aller à l'état 129


état 93

   79 PHRASE: phrase_dol .

    $défaut  réduction par utilisation de la règle 79 (PHRASE)


état 94

   77 PHRASE: phrase_dz .

    $défaut  réduction par utilisation de la règle 77 (PHRASE)


état 95

   80 PHRASE: phrase_pourc .

    $défaut  réduction par utilisation de la règle 80 (PHRASE)


état 96

   78 PHRASE: phrase_et .

    $défaut  réduction par utilisation de la règle 78 (PHRASE)


état 97

   76 SORTIE: mc_display p_ouvre PHRASE . deuxp idf p_ferme point

    deuxp  décalage et aller à l'état 130


état 98

   81 IF: mc_if INST_OPR_LOG_COMP deuxp . INST mc_end
   82   | mc_if INST_OPR_LOG_COMP deuxp . INST mc_else deuxp INST mc_end

    mc_accept   décalage et aller à l'état 56
    mc_display  décalage et aller à l'état 57
    mc_if       décalage et aller à l'état 58
    mc_move     décalage et aller à l'état 59
    idf         décalage et aller à l'état 60
    p_ouvre     décalage et aller à l'état 61

    $défaut  réduction par utilisation de la règle 34 (INST)

    INST               aller à l'état 131
    INST_OPR_LOG_COMP  aller à l'état 64
    AFFECTATION        aller à l'état 65
    ENTREE             aller à l'état 66
    SORTIE             aller à l'état 67
    IF                 aller à l'état 68
    BOUCLE             aller à l'état 69


état 99

   83 BOUCLE: mc_move VAL mc_to . VAL INST mc_end

    type_integer  décalage et aller à l'état 47
    type_float    décalage et aller à l'état 48
    idf           décalage et aller à l'état 74
    type_char     décalage et aller à l'état 49
    type_string   décalage et aller à l'état 50

    TYPE_CONST  aller à l'état 75
    VAL         aller à l'état 132


état 100

   66 OPERANDE: type_integer .

    $défaut  réduction par utilisation de la règle 66 (OPERANDE)


état 101

   67 OPERANDE: type_float .

    $défaut  réduction par utilisation de la règle 67 (OPERANDE)


état 102

   70 OPERANDE: idf .

    $défaut  réduction par utilisation de la règle 70 (OPERANDE)


état 103

   60 EXP_P: p_ouvre . EXP p_ferme OPERATEUR EXPRESSION_AFF
   61      | p_ouvre . EXP p_ferme
   62      | p_ouvre . EXP_P p_ferme
   63      | p_ouvre . EXP_P p_ferme OPERATEUR EXPRESSION_AFF
   64      | p_ouvre . EXP p_ferme OPERATEUR EXP

    type_integer  décalage et aller à l'état 100
    type_float    décalage et aller à l'état 101
    idf           décalage et aller à l'état 102
    p_ouvre       décalage et aller à l'état 103
    type_char     décalage et aller à l'état 104
    type_string   décalage et aller à l'état 105

    EXP       aller à l'état 133
    EXP_P     aller à l'état 134
    OPERANDE  aller à l'état 135


état 104

   68 OPERANDE: type_char .

    $défaut  réduction par utilisation de la règle 68 (OPERANDE)


état 105

   69 OPERANDE: type_string .

    $défaut  réduction par utilisation de la règle 69 (OPERANDE)


état 106

   54 AFFECTATION: idf egal EXPRESSION_AFF .

    $défaut  réduction par utilisation de la règle 54 (AFFECTATION)


état 107

   56 EXPRESSION_AFF: EXP_P .

    $défaut  réduction par utilisation de la règle 56 (EXPRESSION_AFF)


état 108

   55 AFFECTATION: idf egal OPERANDE .
   65 EXP_P: OPERANDE . OPERATEUR EXP

    plus      décalage et aller à l'état 113
    moins     décalage et aller à l'état 114
    multiple  décalage et aller à l'état 115
    division  décalage et aller à l'état 116

    $défaut  réduction par utilisation de la règle 55 (AFFECTATION)

    OPERATEUR  aller à l'état 136


état 109

   36 INST_OPR_LOG_COMP: p_ouvre mc_not EXPRESSION . p_ferme

    p_ferme  décalage et aller à l'état 137


état 110

   49 E: p_ouvre . EXPRESSION p_ferme

    type_integer  décalage et aller à l'état 47
    type_float    décalage et aller à l'état 48
    idf           décalage et aller à l'état 79
    p_ouvre       décalage et aller à l'état 80
    type_char     décalage et aller à l'état 49
    type_string   décalage et aller à l'état 50

    TYPE_CONST  aller à l'état 81
    EXPRESSION  aller à l'état 138
    AUTRE       aller à l'état 83


état 111

   50 E: TYPE_CONST .

    $défaut  réduction par utilisation de la règle 50 (E)


état 112

   45 EXPRESSION: p_ouvre E . OPERATEUR E p_ferme

    plus      décalage et aller à l'état 113
    moins     décalage et aller à l'état 114
    multiple  décalage et aller à l'état 115
    division  décalage et aller à l'état 116

    OPERATEUR  aller à l'état 139


état 113

   71 OPERATEUR: plus .

    $défaut  réduction par utilisation de la règle 71 (OPERATEUR)


état 114

   73 OPERATEUR: moins .

    $défaut  réduction par utilisation de la règle 73 (OPERATEUR)


état 115

   74 OPERATEUR: multiple .

    $défaut  réduction par utilisation de la règle 74 (OPERATEUR)


état 116

   72 OPERATEUR: division .

    $défaut  réduction par utilisation de la règle 72 (OPERATEUR)


état 117

   51 AUTRE: TYPE_CONST OPERATEUR . AUTRE2

    type_integer  décalage et aller à l'état 47
    type_float    décalage et aller à l'état 48
    type_char     décalage et aller à l'état 49
    type_string   décalage et aller à l'état 50

    TYPE_CONST  aller à l'état 140
    AUTRE       aller à l'état 141
    AUTRE2      aller à l'état 142


état 118

   37 OPERATEUR_LOGIQUE_COMP: mc_and .

    $défaut  réduction par utilisation de la règle 37 (OPERATEUR_LOGIQUE_COMP)


état 119

   38 OPERATEUR_LOGIQUE_COMP: mc_or .

    $défaut  réduction par utilisation de la règle 38 (OPERATEUR_LOGIQUE_COMP)


état 120

   40 OPERATEUR_LOGIQUE_COMP: mc_ge .

    $défaut  réduction par utilisation de la règle 40 (OPERATEUR_LOGIQUE_COMP)


état 121

   44 OPERATEUR_LOGIQUE_COMP: mc_g .

    $défaut  réduction par utilisation de la règle 44 (OPERATEUR_LOGIQUE_COMP)


état 122

   41 OPERATEUR_LOGIQUE_COMP: mc_l .

    $défaut  réduction par utilisation de la règle 41 (OPERATEUR_LOGIQUE_COMP)


état 123

   42 OPERATEUR_LOGIQUE_COMP: mc_le .

    $défaut  réduction par utilisation de la règle 42 (OPERATEUR_LOGIQUE_COMP)


état 124

   43 OPERATEUR_LOGIQUE_COMP: mc_eq .

    $défaut  réduction par utilisation de la règle 43 (OPERATEUR_LOGIQUE_COMP)


état 125

   39 OPERATEUR_LOGIQUE_COMP: mc_di .

    $défaut  réduction par utilisation de la règle 39 (OPERATEUR_LOGIQUE_COMP)


état 126

   35 INST_OPR_LOG_COMP: p_ouvre EXPRESSION OPERATEUR_LOGIQUE_COMP . EXPRESSION p_ferme

    type_integer  décalage et aller à l'état 47
    type_float    décalage et aller à l'état 48
    idf           décalage et aller à l'état 79
    p_ouvre       décalage et aller à l'état 80
    type_char     décalage et aller à l'état 49
    type_string   décalage et aller à l'état 50

    TYPE_CONST  aller à l'état 81
    EXPRESSION  aller à l'état 143
    AUTRE       aller à l'état 83


état 127

    1 S: mc_idf mc_div mc_prgm idf point mc_data mc_div mc_work mc_section LIST_DEC mc_proc mc_div LIST_INST mc_stop mc_run .

    $défaut  réduction par utilisation de la règle 1 (S)


état 128

   29 INST: AFFECTATION point INST .

    $défaut  réduction par utilisation de la règle 29 (INST)


état 129

   75 ENTREE: mc_accept p_ouvre sign deuxp . arob idf p_ferme point

    arob  décalage et aller à l'état 144


état 130

   76 SORTIE: mc_display p_ouvre PHRASE deuxp . idf p_ferme point

    idf  décalage et aller à l'état 145


état 131

   81 IF: mc_if INST_OPR_LOG_COMP deuxp INST . mc_end
   82   | mc_if INST_OPR_LOG_COMP deuxp INST . mc_else deuxp INST mc_end

    mc_else  décalage et aller à l'état 146
    mc_end   décalage et aller à l'état 147


état 132

   83 BOUCLE: mc_move VAL mc_to VAL . INST mc_end

    mc_accept   décalage et aller à l'état 56
    mc_display  décalage et aller à l'état 57
    mc_if       décalage et aller à l'état 58
    mc_move     décalage et aller à l'état 59
    idf         décalage et aller à l'état 60
    p_ouvre     décalage et aller à l'état 61

    $défaut  réduction par utilisation de la règle 34 (INST)

    INST               aller à l'état 148
    INST_OPR_LOG_COMP  aller à l'état 64
    AFFECTATION        aller à l'état 65
    ENTREE             aller à l'état 66
    SORTIE             aller à l'état 67
    IF                 aller à l'état 68
    BOUCLE             aller à l'état 69


état 133

   60 EXP_P: p_ouvre EXP . p_ferme OPERATEUR EXPRESSION_AFF
   61      | p_ouvre EXP . p_ferme
   64      | p_ouvre EXP . p_ferme OPERATEUR EXP

    p_ferme  décalage et aller à l'état 149


état 134

   62 EXP_P: p_ouvre EXP_P . p_ferme
   63      | p_ouvre EXP_P . p_ferme OPERATEUR EXPRESSION_AFF

    p_ferme  décalage et aller à l'état 150


état 135

   57 EXP: OPERANDE . OPERATEUR EXP
   58    | OPERANDE . OPERATEUR EXP_P
   59    | OPERANDE .
   65 EXP_P: OPERANDE . OPERATEUR EXP

    plus      décalage et aller à l'état 113
    moins     décalage et aller à l'état 114
    multiple  décalage et aller à l'état 115
    division  décalage et aller à l'état 116

    $défaut  réduction par utilisation de la règle 59 (EXP)

    OPERATEUR  aller à l'état 151


état 136

   65 EXP_P: OPERANDE OPERATEUR . EXP

    type_integer  décalage et aller à l'état 100
    type_float    décalage et aller à l'état 101
    idf           décalage et aller à l'état 102
    type_char     décalage et aller à l'état 104
    type_string   décalage et aller à l'état 105

    EXP       aller à l'état 152
    OPERANDE  aller à l'état 153


état 137

   36 INST_OPR_LOG_COMP: p_ouvre mc_not EXPRESSION p_ferme .

    $défaut  réduction par utilisation de la règle 36 (INST_OPR_LOG_COMP)


état 138

   49 E: p_ouvre EXPRESSION . p_ferme

    p_ferme  décalage et aller à l'état 154


état 139

   45 EXPRESSION: p_ouvre E OPERATEUR . E p_ferme

    type_integer  décalage et aller à l'état 47
    type_float    décalage et aller à l'état 48
    p_ouvre       décalage et aller à l'état 110
    type_char     décalage et aller à l'état 49
    type_string   décalage et aller à l'état 50

    TYPE_CONST  aller à l'état 111
    E           aller à l'état 155


état 140

   51 AUTRE: TYPE_CONST . OPERATEUR AUTRE2
   53 AUTRE2: TYPE_CONST .

    plus      décalage et aller à l'état 113
    moins     décalage et aller à l'état 114
    multiple  décalage et aller à l'état 115
    division  décalage et aller à l'état 116

    $défaut  réduction par utilisation de la règle 53 (AUTRE2)

    OPERATEUR  aller à l'état 117


état 141

   52 AUTRE2: AUTRE .

    $défaut  réduction par utilisation de la règle 52 (AUTRE2)


état 142

   51 AUTRE: TYPE_CONST OPERATEUR AUTRE2 .

    $défaut  réduction par utilisation de la règle 51 (AUTRE)


état 143

   35 INST_OPR_LOG_COMP: p_ouvre EXPRESSION OPERATEUR_LOGIQUE_COMP EXPRESSION . p_ferme

    p_ferme  décalage et aller à l'état 156


état 144

   75 ENTREE: mc_accept p_ouvre sign deuxp arob . idf p_ferme point

    idf  décalage et aller à l'état 157


état 145

   76 SORTIE: mc_display p_ouvre PHRASE deuxp idf . p_ferme point

    p_ferme  décalage et aller à l'état 158


état 146

   82 IF: mc_if INST_OPR_LOG_COMP deuxp INST mc_else . deuxp INST mc_end

    deuxp  décalage et aller à l'état 159


état 147

   81 IF: mc_if INST_OPR_LOG_COMP deuxp INST mc_end .

    $défaut  réduction par utilisation de la règle 81 (IF)


état 148

   83 BOUCLE: mc_move VAL mc_to VAL INST . mc_end

    mc_end  décalage et aller à l'état 160


état 149

   60 EXP_P: p_ouvre EXP p_ferme . OPERATEUR EXPRESSION_AFF
   61      | p_ouvre EXP p_ferme .
   64      | p_ouvre EXP p_ferme . OPERATEUR EXP

    plus      décalage et aller à l'état 113
    moins     décalage et aller à l'état 114
    multiple  décalage et aller à l'état 115
    division  décalage et aller à l'état 116

    $défaut  réduction par utilisation de la règle 61 (EXP_P)

    OPERATEUR  aller à l'état 161


état 150

   62 EXP_P: p_ouvre EXP_P p_ferme .
   63      | p_ouvre EXP_P p_ferme . OPERATEUR EXPRESSION_AFF

    plus      décalage et aller à l'état 113
    moins     décalage et aller à l'état 114
    multiple  décalage et aller à l'état 115
    division  décalage et aller à l'état 116

    $défaut  réduction par utilisation de la règle 62 (EXP_P)

    OPERATEUR  aller à l'état 162


état 151

   57 EXP: OPERANDE OPERATEUR . EXP
   58    | OPERANDE OPERATEUR . EXP_P
   65 EXP_P: OPERANDE OPERATEUR . EXP

    type_integer  décalage et aller à l'état 100
    type_float    décalage et aller à l'état 101
    idf           décalage et aller à l'état 102
    p_ouvre       décalage et aller à l'état 103
    type_char     décalage et aller à l'état 104
    type_string   décalage et aller à l'état 105

    EXP       aller à l'état 163
    EXP_P     aller à l'état 164
    OPERANDE  aller à l'état 135


état 152

   65 EXP_P: OPERANDE OPERATEUR EXP .

    $défaut  réduction par utilisation de la règle 65 (EXP_P)


état 153

   57 EXP: OPERANDE . OPERATEUR EXP
   58    | OPERANDE . OPERATEUR EXP_P
   59    | OPERANDE .

    plus      décalage et aller à l'état 113
    moins     décalage et aller à l'état 114
    multiple  décalage et aller à l'état 115
    division  décalage et aller à l'état 116

    $défaut  réduction par utilisation de la règle 59 (EXP)

    OPERATEUR  aller à l'état 165


état 154

   49 E: p_ouvre EXPRESSION p_ferme .

    $défaut  réduction par utilisation de la règle 49 (E)


état 155

   45 EXPRESSION: p_ouvre E OPERATEUR E . p_ferme

    p_ferme  décalage et aller à l'état 166


état 156

   35 INST_OPR_LOG_COMP: p_ouvre EXPRESSION OPERATEUR_LOGIQUE_COMP EXPRESSION p_ferme .

    $défaut  réduction par utilisation de la règle 35 (INST_OPR_LOG_COMP)


état 157

   75 ENTREE: mc_accept p_ouvre sign deuxp arob idf . p_ferme point

    p_ferme  décalage et aller à l'état 167


état 158

   76 SORTIE: mc_display p_ouvre PHRASE deuxp idf p_ferme . point

    point  décalage et aller à l'état 168


état 159

   82 IF: mc_if INST_OPR_LOG_COMP deuxp INST mc_else deuxp . INST mc_end

    mc_accept   décalage et aller à l'état 56
    mc_display  décalage et aller à l'état 57
    mc_if       décalage et aller à l'état 58
    mc_move     décalage et aller à l'état 59
    idf         décalage et aller à l'état 60
    p_ouvre     décalage et aller à l'état 61

    $défaut  réduction par utilisation de la règle 34 (INST)

    INST               aller à l'état 169
    INST_OPR_LOG_COMP  aller à l'état 64
    AFFECTATION        aller à l'état 65
    ENTREE             aller à l'état 66
    SORTIE             aller à l'état 67
    IF                 aller à l'état 68
    BOUCLE             aller à l'état 69


état 160

   83 BOUCLE: mc_move VAL mc_to VAL INST mc_end .

    $défaut  réduction par utilisation de la règle 83 (BOUCLE)


état 161

   60 EXP_P: p_ouvre EXP p_ferme OPERATEUR . EXPRESSION_AFF
   64      | p_ouvre EXP p_ferme OPERATEUR . EXP

    type_integer  décalage et aller à l'état 100
    type_float    décalage et aller à l'état 101
    idf           décalage et aller à l'état 102
    p_ouvre       décalage et aller à l'état 103
    type_char     décalage et aller à l'état 104
    type_string   décalage et aller à l'état 105

    EXPRESSION_AFF  aller à l'état 170
    EXP             aller à l'état 171
    EXP_P           aller à l'état 107
    OPERANDE        aller à l'état 135


état 162

   63 EXP_P: p_ouvre EXP_P p_ferme OPERATEUR . EXPRESSION_AFF

    type_integer  décalage et aller à l'état 100
    type_float    décalage et aller à l'état 101
    idf           décalage et aller à l'état 102
    p_ouvre       décalage et aller à l'état 103
    type_char     décalage et aller à l'état 104
    type_string   décalage et aller à l'état 105

    EXPRESSION_AFF  aller à l'état 172
    EXP_P           aller à l'état 107
    OPERANDE        aller à l'état 173


état 163

   57 EXP: OPERANDE OPERATEUR EXP .
   65 EXP_P: OPERANDE OPERATEUR EXP .

    p_ferme  réduction par utilisation de la règle 57 (EXP)
    p_ferme  [réduction par utilisation de la règle 65 (EXP_P)]
    point    réduction par utilisation de la règle 57 (EXP)
    point    [réduction par utilisation de la règle 65 (EXP_P)]
    $défaut  réduction par utilisation de la règle 57 (EXP)


état 164

   58 EXP: OPERANDE OPERATEUR EXP_P .

    $défaut  réduction par utilisation de la règle 58 (EXP)


état 165

   57 EXP: OPERANDE OPERATEUR . EXP
   58    | OPERANDE OPERATEUR . EXP_P

    type_integer  décalage et aller à l'état 100
    type_float    décalage et aller à l'état 101
    idf           décalage et aller à l'état 102
    p_ouvre       décalage et aller à l'état 103
    type_char     décalage et aller à l'état 104
    type_string   décalage et aller à l'état 105

    EXP       aller à l'état 174
    EXP_P     aller à l'état 164
    OPERANDE  aller à l'état 135


état 166

   45 EXPRESSION: p_ouvre E OPERATEUR E p_ferme .

    $défaut  réduction par utilisation de la règle 45 (EXPRESSION)


état 167

   75 ENTREE: mc_accept p_ouvre sign deuxp arob idf p_ferme . point

    point  décalage et aller à l'état 175


état 168

   76 SORTIE: mc_display p_ouvre PHRASE deuxp idf p_ferme point .

    $défaut  réduction par utilisation de la règle 76 (SORTIE)


état 169

   82 IF: mc_if INST_OPR_LOG_COMP deuxp INST mc_else deuxp INST . mc_end

    mc_end  décalage et aller à l'état 176


état 170

   60 EXP_P: p_ouvre EXP p_ferme OPERATEUR EXPRESSION_AFF .

    $défaut  réduction par utilisation de la règle 60 (EXP_P)


état 171

   64 EXP_P: p_ouvre EXP p_ferme OPERATEUR EXP .

    $défaut  réduction par utilisation de la règle 64 (EXP_P)


état 172

   63 EXP_P: p_ouvre EXP_P p_ferme OPERATEUR EXPRESSION_AFF .

    $défaut  réduction par utilisation de la règle 63 (EXP_P)


état 173

   65 EXP_P: OPERANDE . OPERATEUR EXP

    plus      décalage et aller à l'état 113
    moins     décalage et aller à l'état 114
    multiple  décalage et aller à l'état 115
    division  décalage et aller à l'état 116

    OPERATEUR  aller à l'état 136


état 174

   57 EXP: OPERANDE OPERATEUR EXP .

    $défaut  réduction par utilisation de la règle 57 (EXP)


état 175

   75 ENTREE: mc_accept p_ouvre sign deuxp arob idf p_ferme point .

    $défaut  réduction par utilisation de la règle 75 (ENTREE)


état 176

   82 IF: mc_if INST_OPR_LOG_COMP deuxp INST mc_else deuxp INST mc_end .

    $défaut  réduction par utilisation de la règle 82 (IF)
